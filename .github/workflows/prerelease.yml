name: Release Pre-release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release Pre-release
    runs-on: ubuntu-latest

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get latest version from package.json
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version" | tr -d "[:punct:]")
          echo "VERSION=$VERSION" >> .env.production
          echo "Version from package.json: $VERSION"

      - name: Create release zip
        id: create_release
        run: |
          mkdir -p release
          zip -r "release/release-$VERSION.zip" .

      - name: Create GitHub Release
        id: create_github_release
        uses: actions/create-release@v1
        with:
          tag_name: "pre-release-$VERSION-${{ github.sha }}"
          release_name: "Pre-release $VERSION"
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release artifact
        id: upload_artifact
        uses: actions/upload-artifact@v2
        with:
          name: "release-$VERSION"
          path: "release/release-${{ env.VERSION }}.zip"

      - name: Get the uploaded ZIP artifact ID
        id: get_zip_artifact_id
        run: echo "ARTIFACT_ID=$(jq -r '.outputs.upload_artifact.artifact_id' $GITHUB_EVENT_PATH)" >> $GITHUB_ENV

      - name: Associate ZIP artifact with the GitHub Release
        run: |
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"name\":\"release-${{ env.VERSION }}.zip\"}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/assets/${{ env.ARTIFACT_ID }}?name=release-${{ env.VERSION }}.zip"
